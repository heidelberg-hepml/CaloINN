e_layer_%layer.pdf:
    label: '\(E_{%layer}\) (GeV)'
    func: calc_e_layer
    y_log: True
    args: {'layer': %layer}

e_layer_%layer_log.pdf:
    label: '\(E_{%layer}\) (GeV)'
    func: calc_e_layer
    args: {'layer': %layer}
    x_log: True
    y_log: True
    range: [(1e-2, 1e-1, 1e-2)[%layer], (2, 3, 2)[%layer]]
    n_bins: 99

e_normd_layer_%layer_log.pdf:
    label: '\\(E_%layer/E_{tot}\\)'
    func: calc_e_layer_normd
    args: {'layer', %layer}

e_normd_layer_%layer_log.pdf:
    label: '\\(E_%layer/E_{tot}\\)'
    func: calc_e_layer_normd
    args: {'layer', %layer}
    n_bins: 99
    x_log: True
    y_log: True
    range: [(1.e-4, 1.e-1, 1.e-4)[%layer], (1.e0, 1.e0, 1.e1)[%layer]]

sparsity_%layer.pdf:
    label: 'sparsity layer %layer'
    func: calc_sparsity
    args: {'layer': %layer}
    n_bins: 19
    range: [0., 1.]

e_ratio_%layer.pdf:
    label: 'ratio E_%layer'
    func: calc_layer_brightest_ratio
    args: {'layer': %layer}
    n_bins: 99
    range: [0., 1.]

eta_%layer.pdf:
    label: '\(\left<\eta_%layer\right>\)'
    func: calc_centroid_mean
    args: {'layer': %layer, 'dir': 'eta'}
    y_log: True
    n_bins: 49
    range: [-125., 125.]

eta_%layer_std.pdf:
    label: '\(std \eta_%layer\)'
    func: calc_centroid_std
    args: {'layer': %layer, 'dir': 'eta'}
    x_log: True
    y_log: True
    n_bins: 99
    range: [1. , (1.e3, 1.e2, 1.e3)[%layer]]

phi_%layer.pdf:
    label: '\(\left<\phi_%layer\right>\)'
    func: calc_centroid_mean
    args: {'layer': %layer, 'dir': 'phi'}
    y_log: True
    n_bins: 49
    range: [-125., 125.]

phi_%layer_std.pdf:
    label: '\(std \phi_%layer\)'
    func: calc_centroid_std
    args: {'layer': %layer, 'dir': 'phi'}
    x_log: True
    y_log: True
    n_bins: 99
    range: [1., (1.e3, 1.e3, 1.e3)[%layer]]

1_brightest_voxel_layer_%layer.pdf:
    label: '1. brightest voxel in layer %layer'
    func: calc_brightest_voxel
    args: {'layer': %layer, 'N': 1}
    n_bins: 99
    range: [0., 1.]

2_brightest_voxel_layer_%layer.pdf:
    label: '2. brightest voxel in layer %layer'
    func: calc_brightest_voxel
    args: {'layer': %layer, 'N': 2}
    n_bins: 99
    range: [0., 0.5]

3_brightest_voxel_layer_%layer.pdf:
    label: '3. brightest voxel in layer %layer'
    func: calc_brightest_voxel
    args: {'layer': %layer, 'N': 3}
    n_bins: 99
    range: [0., 0.33]

4_brightest_voxel_layer_%layer.pdf:
    label: '4. brightest voxel in layer %layer'
    func: calc_brightest_voxel
    args: {'layer': %layer, 'N': 4}
    n_bins: 99
    range: [0., 0.25]

5_brightest_voxel_layer_%layer.pdf:
    label: '5. brightest voxel in layer %layer'
    func: calc_brightest_voxel
    args: {'layer': %layer, 'N': 5}
    n_bins: 99
    range: [0., 0.2]

spectrum_%layer.pdf:
    label: 'voxel energy (GeV)'
    func: calc_spectrum
    args: {'layer': %layer}
    x_log: True
    y_log: True
